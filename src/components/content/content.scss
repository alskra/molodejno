@custom-selector :--host .content;
@custom-selector :--scope [data-s-content];
@custom-selector :--heading :is(h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6);
@custom-selector :--heading-1 :is(h1, .h1);
@custom-selector :--heading-2 :is(h2, .h2);
@custom-selector :--heading-3 :is(h3, .h3);
@custom-selector :--heading-4 :is(h4, .h4);
@custom-selector :--heading-5 :is(h5, .h5);
@custom-selector :--heading-6 :is(h6, .h6);
@custom-selector :--link :any-link:not([href^="tel:"]);
@custom-selector :--list :is(ul, ol);
@custom-selector :--section :is(.subsection, .section-feedback, .section-about__image-4);

:--host:--scope {
	--list-indent: #{em(65)};
	--list-marker-size: #{em(10)};
	--blockquote-font-size: #{em(24)};

	font-size: var(--font-size);
	line-height: var(--line-height);

	@include media-down(lg) {
		--list-indent: #{em(35)};
		--blockquote-font-size: #{em(18)};
	}
}

:--heading:--scope {
	@include margin-block-child(var(--heading-interval-top), var(--heading-interval-bottom));

	margin: 0;
}

:--heading + :--scope {
	// stylelint-disable-next-line
	margin-block-start: 0 !important;
}

@for $level from 1 through 6 {
	:--heading-#{$level}:--scope {
		font-family: var(--heading-#{$level}-font-family, var(--heading-font-family));
		font-weight: var(--heading-#{$level}-font-weight, var(--heading-font-weight));
		font-size: var(--heading-#{$level}-font-size);
		line-height: var(--heading-#{$level}-line-height, var(--heading-line-height));
		color: var(--heading-#{$level}-color, var(--heading-color));
	}
}

p {
	@include margin-block-child(var(--paragraph-interval));

	margin: 0;
}

:--link:--scope {
	text-decoration: var(--link-text-decoration);
	color: var(--link-color);
	transition: color var(--duration);

	@include hover {
		text-decoration: var(--link-hover-text-decoration, var(--link-text-decoration));
		color: var(--link-hover-color, var(--link-color));
	}
}

:--list:--scope {
	@include margin-block-child(var(--paragraph-interval));

	position: relative;
	list-style: none;
	margin: 0;
	padding-inline-start: var(--list-indent);
}

li:--scope {
	@include margin-block-child(var(--paragraph-interval));
}

ul > li:--scope {
	&::before {
		@include gradient-conic;

		content: "";
		position: absolute;
		margin-top: calc((var(--line-height) * 1em - var(--list-marker-size)) / 2);
		border-radius: 50%;
		width: var(--list-marker-size);
		height: var(--list-marker-size);
		inset-inline-start: 0;
	}
}

ol:--scope {
	counter-reset: ol;
}

ol > li:--scope {
	counter-increment: ol;

	&::before {
		content: counter(ol) ".\00A0";
		position: absolute;
		width: var(--list-indent);
		text-align: start;
		color: $color-gray;
		inset-inline-start: 0;
	}
}

blockquote:not(.quote):--scope {
	@include margin-block-child(var(--block-interval));

	position: relative;
	margin: 0;
	font-family: var(--heading-font-family);
	font-weight: 500;
	font-size: var(--blockquote-font-size);
	line-height: 1.2;
	padding-inline-start: var(--list-indent);

	&::before {
		content: "";
		position: absolute;
		height: min(55rem, 100% - 8rem);
		border-inline-start: 1px solid;
		inset-block-start: 8rem;
		inset-inline-start: 0;
	}
}

table:--scope {
	@include margin-block-child(var(--block-interval));

	display: block;
	overflow: auto;
}

tbody:--scope {
	display: table;
	border-collapse: collapse;
}

tr:first-child :is(th, td):--scope {
	padding-top: 0;
}

tr:last-child :is(th, td):--scope {
	padding-bottom: 0;
}

:is(th, td):--scope {
	vertical-align: baseline;
	padding: calc(0.5 * var(--paragraph-interval)) calc(0.5 * var(--gap-md));
}

:is(th, td):first-child:--scope {
	padding-left: 0;
}

:is(th, td):last-child:--scope {
	padding-right: 0;
}

td:first-child:--scope {
	color: $color-gray;
}

img:--scope {
	@include margin-block-child(var(--block-interval));

	display: block;
	max-width: 100%;

	&:not([width]) {
		width: 100%;
	}
}

:--section:--scope {
	@include margin-block-child(var(--heading-interval-top), var(--block-interval));
}

@include media-down(lg) {
	img:--scope {
		max-width: var(--full-width);
		margin-inline: calc(-1 * var(--container-content-offset));

		&:not([width]) {
			width: var(--full-width);
		}
	}
}
